//
// Created by Hello，Mr.Zhang on 2017/7/15.
//

/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include <stdio.h>
#include "logUtils.h"
#include "AlgFunc.h"
#include <stdlib.h>
#include <android/bitmap.h>
#include <string.h>
/* Header for class com_jnidemo_MainActivity */

#ifndef _Included_com_jnidemo_MainActivity
#define _Included_com_jnidemo_MainActivity
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_jnidemo_MainActivity
 * Method:    stringFromC
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_jnidemo_MainActivity_stringFromC
        (JNIEnv * env, jobject clazz){
    LOGD("HELLOFROMC");
    return (*env).NewStringUTF("helloFromC");
}
/*
 * jni bitmap
 * */
JNIEXPORT jobject JNICALL Java_com_jnidemo_MainActivity_processByteArray
        (
                JNIEnv *env,jobject obj,jbyteArray data, int w, int h)
{
    LOGD("HELLOFROMC");
    LOGD("%s:w=%d,h=%d", __func__,w,h);
    // 1.获取到 arr的大小
    int len=env->GetArrayLength(data);

    //2.取出数组中第一个元素的内存地址
    char * buf_pic = (char *)env->GetByteArrayElements( data, 0); // 获取int数组元素

    //转灰度图像
    imgToGrayARGB(buf_pic, w, h);
    LOGI("%s:after imgToGrayRGB", __func__);


    //定义结构体，赋值
    Process_result process_result;
    process_result.width=w;
    process_result.height=h;
    process_result.x=0;
    process_result.y=0;
    sprintf(process_result.strResult,"gray ok");

    //获取Java中的实例类
    jclass jcInfo = env->FindClass("com/jnidemo/ProcessResult");
    //获取类中每一个变量的定义

    //int x
    jfieldID jfx = env->GetFieldID(jcInfo, "x", "I");
    //int y
    jfieldID jfy = env->GetFieldID(jcInfo, "y", "I");
    //int width
    jfieldID jfwidth = env->GetFieldID(jcInfo, "width", "I");
    //int height
    jfieldID jfheight = env->GetFieldID(jcInfo, "height", "I");

    //byte[] strResult
    jfieldID jfstrResult = env->GetFieldID(jcInfo, "strResult", "[B");//"Ljava/lang/String;"

    //创建新的对象
    jobject joInfo = env->AllocObject(jcInfo);

    //给类成员赋值
    env->SetIntField(joInfo, jfx, process_result.x);
    env->SetIntField(joInfo, jfy, process_result.y);
    env->SetIntField(joInfo, jfwidth, process_result.width);
    env->SetIntField(joInfo, jfheight, process_result.height);

    //数组赋值
    int nTmpLen = (int) strlen(process_result.strResult);
    LOGI("log: strlen(process_result.strResult)=%d", nTmpLen);
    jbyteArray jarr = env->NewByteArray(nTmpLen);
    env->SetByteArrayRegion(jarr, 0, nTmpLen, (jbyte *)process_result.strResult);
    env->SetObjectField(joInfo, jfstrResult, jarr);

    return joInfo;
}
/*
 * blur bitmap
 */
JNIEXPORT void JNICALL Java_com_jnidemo_MainActivity_blurBitmap
        (JNIEnv * env, jobject clazz,jobject bitmapIn, jint r){
    LOGD("HELLOFROMC");
}
#ifdef __cplusplus
}
#endif
#endif
